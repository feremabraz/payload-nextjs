/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    blog: Blog;
    projects: Project;
    awards: Award;
    'studio-info': StudioInfo;
    'team-members': TeamMember;
    testimonials: Testimonial;
    publications: Publication;
    'company-settings': CompanySetting;
    'values-and-mission': ValuesAndMission;
    'legal-pages': LegalPage;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    blog: BlogSelect<false> | BlogSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    awards: AwardsSelect<false> | AwardsSelect<true>;
    'studio-info': StudioInfoSelect<false> | StudioInfoSelect<true>;
    'team-members': TeamMembersSelect<false> | TeamMembersSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    publications: PublicationsSelect<false> | PublicationsSelect<true>;
    'company-settings': CompanySettingsSelect<false> | CompanySettingsSelect<true>;
    'values-and-mission': ValuesAndMissionSelect<false> | ValuesAndMissionSelect<true>;
    'legal-pages': LegalPagesSelect<false> | LegalPagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog".
 */
export interface Blog {
  id: number;
  title: string;
  description: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  featuredImage?: (number | null) | Media;
  category: 'publications' | 'awards' | 'conferences' | 'exhibitions' | 'news';
  date: string;
  slug: string;
  published?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: number;
  title: string;
  description: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  featuredImage?: (number | null) | Media;
  gallery?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  category: 'houses' | 'interior-design' | 'buildings' | 'corporative';
  location: string;
  year: number;
  projectType: string;
  client: string;
  projectSize: string;
  slug: string;
  published?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "awards".
 */
export interface Award {
  id: number;
  /**
   * Award title or name
   */
  title: string;
  /**
   * Brief description of the award
   */
  description: string;
  /**
   * Project that received the award
   */
  project: string;
  /**
   * Location where the award was given or project is located
   */
  location: string;
  /**
   * Year the award was received
   */
  year: string;
  /**
   * Image representing the award or awarded project
   */
  awardImage: number | Media;
  /**
   * Feature this award prominently
   */
  featured?: boolean | null;
  /**
   * Display this award on the website
   */
  published?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "studio-info".
 */
export interface StudioInfo {
  id: number;
  /**
   * Section title (e.g., 'Values', 'Team', 'Studio')
   */
  title: string;
  /**
   * Detailed description of this studio aspect
   */
  description: string;
  /**
   * Representative image for this section
   */
  image: number | Media;
  /**
   * Display order (lower numbers appear first)
   */
  order?: number | null;
  /**
   * Display this section on the website
   */
  published?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team-members".
 */
export interface TeamMember {
  id: number;
  /**
   * Full name of the team member
   */
  name: string;
  /**
   * Job title or role in the company
   */
  role: string;
  /**
   * Professional biography
   */
  bio: string;
  /**
   * Personal interests or hobbies (optional)
   */
  interests?: string | null;
  /**
   * Professional headshot or profile photo
   */
  profileImage: number | Media;
  /**
   * Display order (lower numbers appear first)
   */
  order?: number | null;
  /**
   * Show this team member on the website
   */
  published?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  /**
   * The testimonial quote text
   */
  quote: string;
  /**
   * Name of the person giving the testimonial
   */
  author: string;
  /**
   * Role or title of the person (e.g., 'owner', 'client')
   */
  role: string;
  /**
   * Feature this testimonial prominently
   */
  featured?: boolean | null;
  /**
   * Publish this testimonial on the website
   */
  published?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publications".
 */
export interface Publication {
  id: number;
  /**
   * The publication source or project name (e.g., 'ARCH DAILY PUBLICATION', 'HOUSE IN LISBON')
   */
  title: string;
  /**
   * The article title or publication name (e.g., 'White Forest in Monsorrato / Bruno CÃ¢mara Architectos')
   */
  publication: string;
  /**
   * Publication date (e.g., 'February, 2020')
   */
  date: string;
  /**
   * Optional description or summary of the publication
   */
  description?: string | null;
  /**
   * Display order (lower numbers appear first)
   */
  order?: number | null;
  /**
   * Publish this publication on the website
   */
  published?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage company information, contact details, and site configuration
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company-settings".
 */
export interface CompanySetting {
  id: number;
  /**
   * Setting name for identification (e.g., 'Contact Info', 'Social Media')
   */
  name: string;
  /**
   * Category to organize settings
   */
  category: 'contact' | 'social' | 'company' | 'legal' | 'other';
  settings?: {
    /**
     * Primary contact email address
     */
    email?: string | null;
    /**
     * Phone number
     */
    phone?: string | null;
    /**
     * Physical address (multi-line)
     */
    address?: string | null;
    /**
     * Social media links
     */
    socialLinks?:
      | {
          platform: 'facebook' | 'instagram' | 'linkedin' | 'twitter' | 'youtube';
          /**
           * Full URL to the social media profile
           */
          url: string;
          /**
           * Show this social link on the website
           */
          isActive?: boolean | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Official company name
     */
    companyName?: string | null;
    /**
     * Company description or tagline
     */
    companyDescription?: string | null;
    /**
     * Copyright text (year will be auto-updated)
     */
    copyright?: string | null;
    /**
     * Custom setting value
     */
    customValue?: string | null;
  };
  /**
   * Enable this setting on the website
   */
  isActive?: boolean | null;
  /**
   * Display order (lower numbers appear first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage company values, mission statements, and core messaging
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "values-and-mission".
 */
export interface ValuesAndMission {
  id: number;
  /**
   * Title of the value or mission statement (e.g., 'Quality', 'Rigor')
   */
  title: string;
  /**
   * Type of content this represents
   */
  type: 'value' | 'mission' | 'vision' | 'principle';
  /**
   * The main text content describing this value or mission
   */
  content: string;
  /**
   * Optional short summary or tagline
   */
  summary?: string | null;
  /**
   * Optional icon identifier or emoji
   */
  icon?: string | null;
  /**
   * Display order (lower numbers appear first)
   */
  order?: number | null;
  /**
   * Publish this content on the website
   */
  published?: boolean | null;
  /**
   * Feature this content on the homepage
   */
  featuredOnHomepage?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage legal documents like Terms of Service and Privacy Policy
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "legal-pages".
 */
export interface LegalPage {
  id: number;
  /**
   * Title of the legal document (e.g., 'Privacy Policy', 'Terms of Service')
   */
  title: string;
  /**
   * Type of legal document
   */
  pageType: 'privacy' | 'terms' | 'cookies' | 'data-protection' | 'disclaimer' | 'other';
  /**
   * URL slug for the page (e.g., 'privacy', 'tos')
   */
  slug: string;
  /**
   * Date when this document was last updated
   */
  lastUpdated: string;
  introduction: {
    /**
     * Optional subtitle or description
     */
    subtitle?: string | null;
    /**
     * Main introduction text
     */
    content: string;
  };
  /**
   * Content sections of the legal document
   */
  sections: {
    /**
     * Section heading (e.g., '1. Information We Collect')
     */
    heading: string;
    /**
     * Main content for this section
     */
    content: string;
    /**
     * Optional subsections within this section
     */
    subsections?:
      | {
          /**
           * Subsection heading
           */
          subheading: string;
          /**
           * Subsection content
           */
          content: string;
          /**
           * Optional bullet points for this subsection
           */
          listItems?:
            | {
                item: string;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Optional bullet points for this section
     */
    listItems?:
      | {
          item: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Display order for this section
     */
    order?: number | null;
    id?: string | null;
  }[];
  /**
   * Contact information section (usually at the bottom)
   */
  contactInfo?: {
    /**
     * Include contact information section
     */
    includeContact?: boolean | null;
    heading?: string | null;
    /**
     * Contact information text
     */
    content?: string | null;
  };
  /**
   * Publish this legal page on the website
   */
  published?: boolean | null;
  /**
   * Display order in legal pages list
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'blog';
        value: number | Blog;
      } | null)
    | ({
        relationTo: 'projects';
        value: number | Project;
      } | null)
    | ({
        relationTo: 'awards';
        value: number | Award;
      } | null)
    | ({
        relationTo: 'studio-info';
        value: number | StudioInfo;
      } | null)
    | ({
        relationTo: 'team-members';
        value: number | TeamMember;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'publications';
        value: number | Publication;
      } | null)
    | ({
        relationTo: 'company-settings';
        value: number | CompanySetting;
      } | null)
    | ({
        relationTo: 'values-and-mission';
        value: number | ValuesAndMission;
      } | null)
    | ({
        relationTo: 'legal-pages';
        value: number | LegalPage;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog_select".
 */
export interface BlogSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  content?: T;
  featuredImage?: T;
  category?: T;
  date?: T;
  slug?: T;
  published?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  content?: T;
  featuredImage?: T;
  gallery?:
    | T
    | {
        image?: T;
        id?: T;
      };
  category?: T;
  location?: T;
  year?: T;
  projectType?: T;
  client?: T;
  projectSize?: T;
  slug?: T;
  published?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "awards_select".
 */
export interface AwardsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  project?: T;
  location?: T;
  year?: T;
  awardImage?: T;
  featured?: T;
  published?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "studio-info_select".
 */
export interface StudioInfoSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  image?: T;
  order?: T;
  published?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team-members_select".
 */
export interface TeamMembersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  bio?: T;
  interests?: T;
  profileImage?: T;
  order?: T;
  published?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  quote?: T;
  author?: T;
  role?: T;
  featured?: T;
  published?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publications_select".
 */
export interface PublicationsSelect<T extends boolean = true> {
  title?: T;
  publication?: T;
  date?: T;
  description?: T;
  order?: T;
  published?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company-settings_select".
 */
export interface CompanySettingsSelect<T extends boolean = true> {
  name?: T;
  category?: T;
  settings?:
    | T
    | {
        email?: T;
        phone?: T;
        address?: T;
        socialLinks?:
          | T
          | {
              platform?: T;
              url?: T;
              isActive?: T;
              id?: T;
            };
        companyName?: T;
        companyDescription?: T;
        copyright?: T;
        customValue?: T;
      };
  isActive?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "values-and-mission_select".
 */
export interface ValuesAndMissionSelect<T extends boolean = true> {
  title?: T;
  type?: T;
  content?: T;
  summary?: T;
  icon?: T;
  order?: T;
  published?: T;
  featuredOnHomepage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "legal-pages_select".
 */
export interface LegalPagesSelect<T extends boolean = true> {
  title?: T;
  pageType?: T;
  slug?: T;
  lastUpdated?: T;
  introduction?:
    | T
    | {
        subtitle?: T;
        content?: T;
      };
  sections?:
    | T
    | {
        heading?: T;
        content?: T;
        subsections?:
          | T
          | {
              subheading?: T;
              content?: T;
              listItems?:
                | T
                | {
                    item?: T;
                    id?: T;
                  };
              id?: T;
            };
        listItems?:
          | T
          | {
              item?: T;
              id?: T;
            };
        order?: T;
        id?: T;
      };
  contactInfo?:
    | T
    | {
        includeContact?: T;
        heading?: T;
        content?: T;
      };
  published?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}